@page "/login"
@using DataShared
@inject LoginService LoginService

@using System.Security.Claims
@using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationStateProvider AuthenticationStateProvider

<MudItem Class="d-flex justify-center pt-12">
	<MudCard >
		<MudCardHeader>
			<CardHeaderAvatar>
				<MudAvatar Color="Color.Primary">L</MudAvatar>
			</CardHeaderAvatar>
			<CardHeaderContent>
				<MudText Typo="Typo.body1">로그인</MudText>
			</CardHeaderContent>
		</MudCardHeader>
		<MudCardMedia Image="https://www.forbes.com/advisor/wp-content/uploads/2021/09/featured-image-tile-flooring.jpeg" Height="200"></MudCardMedia>
		<MudCardContent>
				<MudItem Class="d-inline-flex pr-2 flex-grow-0 ">
					<MudTextField @bind-Value="@inputUser.User_ID" Label="아이디" Variant="Variant.Outlined" Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Filled.PermIdentity" />
				</MudItem>
				<MudItem Class="d-inline-flex pl-2 flex-grow-0 ">
					<MudTextField @bind-Value="@inputUser.User_PW" Label="비밀번호" Variant="Variant.Outlined"
								  InputType="@InputType.Password" Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Filled.VisibilityOff" />
				</MudItem>
		</MudCardContent>
		<MudCardActions Class="d-flex justify-end">
			<MudButton Size="Size.Large" OnClick="@LoginClick" Color="Color.Primary">Login</MudButton>
		</MudCardActions>
	</MudCard>
</MudItem>
@code {
	User inputUser = new User();

	private string _authMessage;
    private string _surnameMessage;
    private IEnumerable<Claim> _claims = Enumerable.Empty<Claim>();

	public async void LoginClick()
	{
		bool loginResult = await LoginService.LoginProcess(inputUser);
		await GetClaimsPrincipalData();
	}

	private async Task GetClaimsPrincipalData()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            _authMessage = $"{user.Identity.Name} is authenticated.";
            _claims = user.Claims;
            _surnameMessage = 
                $"Surname: {user.FindFirst(c => c.Type == ClaimTypes.Surname)?.Value}";
        }
        else
        {
            _authMessage = "The user is NOT authenticated.";
        }
    }
}
