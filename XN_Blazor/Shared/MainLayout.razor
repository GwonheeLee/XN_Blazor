@using System.Security.Claims
@inherits LayoutComponentBase
@inject AuthenticationStateProvider Auth
<MudThemeProvider />
<MudDialogProvider />
<MudSnackbarProvider />


<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start"
            OnClick="@((e) => DrawerToggle())" />
        <MudAppBarSpacer />
        <MudText Typo="Typo.h6" Class="ml-3">@curName</MudText>
        <MudIconButton Icon="@Icons.Material.Outlined.PeopleAlt" Color="@loginColor" Edge="Edge.End" Link="/hi"/>
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" Elevation="2">
        <MudDrawerHeader>
            <MudText Typo="Typo.h5">Global No.1 Samyun</MudText>
        </MudDrawerHeader>
        <MudDivider />
        <NavMenu />
    </MudDrawer>
    <MudMainContent Class="px-8" MaxWidth="MaxWidth.False">
        @Body
    </MudMainContent>
</MudLayout>

@code {
    bool _drawerOpen = true;
    Color loginColor;
    string curName="";
    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }
    protected override async Task OnInitializedAsync()
    {
        var curAuth = await Auth.GetAuthenticationStateAsync();

        if(curAuth.User.HasClaim(c=>c.Type==ClaimTypes.Actor))
        {
            loginColor = Color.Success;
            curName = curAuth.User.Claims.FirstOrDefault(c => c.Type == ClaimTypes.Name)?.Value ?? "";
            curName = curName == "" ? "" : curName + " 님";
        }
        else
        {
            loginColor = Color.Inherit;
        }
        
    }

}